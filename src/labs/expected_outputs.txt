# Expected Outputs for Lab-01 to Lab-50

## Lab-01: Factorial of a Number
Input: 5
Expected Output:
Factorial of 5 is 120

---

## Lab-02: Reverse a String
Input: hello
Expected Output:
Reversed string: olleh

---

## Lab-03: Dynamically Allocated Array
Input:
5
10 20 30 40 50
Expected Output:
The elements of the array are:
10 20 30 40 50

---

## Lab-04: Swap Two Numbers
Input:
10 20
Expected Output:
Before swapping: x = 10, y = 20
After swapping: x = 20, y = 10

---

## Lab-05: Bubble Sort
Input:
5
5 3 8 6 2
Expected Output:
Sorted array: 2 3 5 6 8

---

## Lab-06: Linked List Creation
Input: Add 10, 20, 30 to the linked list
Expected Output:
Linked List: 10 -> 20 -> 30 -> NULL

---

## Lab-07: Binary Search Tree
Input: Insert 50, 30, 70, 20, 40
Expected Output:
In-order Traversal: 20 30 40 50 70

---

## Lab-08: Quick Sort
Input:
5
10 80 30 90 40
Expected Output:
Sorted array: 10 30 40 80 90

---

## Lab-09: Fibonacci Numbers
Input: 6
Expected Output:
Fibonacci Series: 0 1 1 2 3 5

---

## Lab-10: Merge Two Sorted Arrays
Input:
Array 1: 1 3 5
Array 2: 2 4 6
Expected Output:
Merged array: 1 2 3 4 5 6

---

## Lab-11: Graph Adjacency List
Input:
5
0 1
0 4
1 2
1 3
1 4
2 3
3 4
Expected Output:
Adjacency list of vertex 0: 1 -> 4 -> 
Adjacency list of vertex 1: 2 -> 3 -> 4 -> 
Adjacency list of vertex 2: 3 -> 
Adjacency list of vertex 3: 4 -> 
Adjacency list of vertex 4: 

---

## Lab-12: Depth First Search (DFS)
Input: Graph with 4 vertices and edges (0-1, 1-2, 2-3)
Expected Output:
DFS Traversal: 0 1 2 3

---

## Lab-13: Sum of Digits
Input: 123
Expected Output:
Sum of digits: 6

---

## Lab-14: Stack Using Array
Input: Push 10, Push 20, Push 30, Pop
Expected Output:
Popped element: 30

---

## Lab-15: Infix to Postfix
Input: a+b*c
Expected Output:
Postfix Expression: abc*+

---

## Lab-16: Breadth First Search (BFS)
Input: Graph with 4 vertices and edges (0-1, 1-2, 2-3)
Expected Output:
BFS Traversal: 0 1 2 3

---

## Lab-17: Matrix Multiplication
Input:
Matrix A: 
1 2
3 4
Matrix B:
5 6
7 8
Expected Output:
Resultant Matrix:
19 22
43 50

---

## Lab-18: Rotate an Array
Input: Array: 1 2 3 4 5, Rotate by 2
Expected Output:
Rotated Array: 4 5 1 2 3

---

## Lab-19: GCD of Two Numbers
Input: 48, 18
Expected Output:
GCD: 6

---

## Lab-20: Power of a Number
Input: Base=2, Exponent=5
Expected Output:
Result: 32

---

## Lab-21: Merge Sort
Input: Array: 38 27 43 3 9 82 10
Expected Output:
Sorted array: 3 9 10 27 38 43 82

---

## Lab-22: Evaluate Postfix Expression
Input: Postfix expression: 23+4*
Expected Output:
Result: 20

---

## Lab-23: Circular Queue
Input: 10, 20, 30, 40, 50
Expected Output:
Circular Queue: 10 20 30 40 50
Dequeued element: 10
Circular Queue after dequeue: 20 30 40 50

Reversed List: 3->2->1->NULL

---

## Lab-24: Priority Queue (Max Heap)
Input: 20, 15, 30, 5
Expected Output:
Heap elements: 30 15 20 5
Deleted max element: 30
Heap after deletion: 20 15 5

---

## Lab-25: Dijkstra's Algorithm
Input: Graph with 5 vertices and 7 edges
Expected Output:
Shortest distances from source vertex 0:
To vertex 1: 4
To vertex 2: 8 
To vertex 3: 7
To vertex 4: 9

---

## Lab-26: Cycle Detection in Graph
Input:
Enter the number of vertices and edges: 4 4
Enter edge (u v): 0 1
Enter edge (u v): 1 2 
Enter edge (u v): 2 3
Enter edge (u v): 3 1
Expected Output:
Cycle detected in the graph

---

## Lab-27: String Palindrome
Input: madam
Expected Output:
The string is a palindrome.

---

## Lab-28: Kruskal's MST
Input: Graph with 4 vertices and 5 edges
Expected Output:
Edges in MST:
(0,1) weight: 10
(1,2) weight: 15
(2,3) weight: 20
Total MST cost: 45

---

## Lab-29: Count Tree Nodes
Input: Binary tree with 7 nodes
Expected Output:
Number of nodes: 7

---

## Lab-30: Doubly Linked List
Input: Insert: 10, 20, 30, Delete: 20
Expected Output:
List after insertion: 10<->20<->30
List after deletion: 10<->30

---

## Lab-31: Insertion Sort
Input: 64 34 25 12 22 11 90
Expected Output:
Sorted array: 11 12 22 25 34 64 90

---

## Lab-32: Matrix Transpose
Input: 3x3 matrix
1 2 3
4 5 6
7 8 9
Expected Output:
Transposed matrix:
1 4 7
2 5 8
3 6 9

---

## Lab-33: Maximum Subarray Sum
Input: -2 -3 4 -1 -2 1 5 -3
Expected Output:
Maximum contiguous sum: 7

---

## Lab-34: String Anagrams
Input: "listen", "silent"
Expected Output:
The strings are anagrams.

---

## Lab-35: Reverse Linked List
Input: 1->2->3->NULL
Expected Output:
Original List: 1->2->3->NULL
Reversed List: 3->2->1->NULL

---

## Lab-36: Tower of Hanoi
Input: 3 disks
Expected Output:
Move disk 1 from A to C
Move disk 2 from A to B
Move disk 1 from C to B
Move disk 3 from A to C
Move disk 1 from B to A
Move disk 2 from B to C
Move disk 1 from A to C

---

## Lab-37: Prime Numbers
Input: 20
Expected Output:
Prime numbers up to 20: 2 3 5 7 11 13 17 19

---

## Lab-38: Binary Search
Input: Array: 2 3 4 10 40, Search: 10
Expected Output:
Element found at index 3

---

## Lab-39: Matrix Determinant
Input: 3x3 matrix
1 2 3
4 5 6
7 8 9
Expected Output:
Determinant: 0

---

## Lab-40: Hash Table
Input: Insert: "apple", "banana", "orange"
Expected Output:
Hash table contents:
Bucket 0: apple
Bucket 2: banana
Bucket 4: orange

---

## Lab-41: Largest Connected Component
Input: Graph with 6 vertices
Expected Output:
Size of largest connected component: 4

---

## Lab-42: Balanced Binary Tree
Input: Binary tree with 7 nodes
Expected Output:
The tree is balanced

---

## Lab-43: Floyd-Warshall Algorithm
Input: Graph with 4 vertices
Expected Output:
Shortest distances between all pairs of vertices:
  0  4  8  9
  4  0  6  7
  8  6  0  5
  9  7  5  0

---

## Lab-44: Permutations and Combinations
Input: n=5, r=3
Expected Output:
Permutations: 60
Combinations: 10

---

## Lab-45: Armstrong Number
Input: 153
Expected Output:
153 is an Armstrong number

---

## Lab-46: Binary Tree Height
Input: Binary tree with 7 nodes
Expected Output:
Height of tree: 3

---

## Lab-47: Median of Sorted Arrays
Input: arr1: 1 3 5, arr2: 2 4 6
Expected Output:
Median: 3.5

---

## Lab-48: Reverse Words
Input: "Hello World Program"
Expected Output:
Reversed string: "Program World Hello"

---

## Lab-49: Prim's Algorithm
Input: Graph with 5 vertices
Expected Output:
Edges in MST:
(0-1): 2
(1-2): 3
(2-3): 1
(3-4): 4
Total MST cost: 10

---

## Lab-50: Character Frequency
Input: "hello world"
Expected Output:
h: 1
e: 1
l: 3
o: 2
w: 1
r: 1
d: 1
