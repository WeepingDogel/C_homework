# Expected Outputs for Test-01 to Test-50

## Test-01: Convert Decimal to Binary
Input: 10
Expected Output:
Binary representation: 1010

---

## Test-02: Sieve of Eratosthenes
Input: 10
Expected Output:
Prime numbers up to 10:
2 3 5 7

---

## Test-03: Queue Using Two Stacks
Input:
Enqueue 10, Enqueue 20, Enqueue 30, Dequeue
Expected Output:
Dequeued: 10

---

## Test-04: Solve N-Queens Problem
Input: N = 4
Expected Output:
One possible solution:
2 4 1 3

---

## Test-05: Trie Implementation
Input: Insert "cat", "car". Search for "cat".
Expected Output:
Search for 'cat': Found

---

## Test-06: Matrix Addition
Input:
Matrix A:
1 2
3 4
Matrix B:
5 6
7 8
Expected Output:
Resultant Matrix:
6 8
10 12

---

## Test-07: Graph Using Adjacency Matrix
Input: 4 vertices, 3 edges (0-1, 0-2, 1-2)
Expected Output:
Adjacency Matrix:
0 1 1 0
1 0 1 0
1 1 0 0
0 0 0 0

---

## Test-08: Lowest Common Ancestor in Binary Tree
Input: Binary Tree with root = 3, nodes 5 and 1
Expected Output:
LCA: 3

---

## Test-09: Sort Strings Alphabetically
Input: apple, banana, apricot
Expected Output:
Sorted Strings:
apricot
apple
banana

---

## Test-10: Knapsack Problem Using Dynamic Programming
Input: Weights = {2, 3, 4}, Values = {4, 5, 7}, Capacity = 5
Expected Output:
Maximum value in knapsack: 9

---

## Test-11: Count Inversions in an Array
Input: Array: {1, 20, 6, 4, 5}
Expected Output:
Number of inversions: 5

---

## Test-12: Bellman-Ford Algorithm
Input: Graph with edges [(0, 1, 5), (1, 2, 3), (0, 2, 8)], source=0
Expected Output:
Shortest distances from source:
0 5 8

---

## Test-13: Modular Exponentiation
Input: Base=2, Exponent=10, Modulus=1000
Expected Output:
Result: 24

---

## Test-14: Count Connected Components in a Graph
Input: Graph with 5 vertices and edges [(0, 1), (2, 3)]
Expected Output:
Number of connected components: 3

---

## Test-15: Radix Sort
Input: Array: {170, 45, 75, 90, 802, 24, 2, 66}
Expected Output:
Sorted array: 2 24 45 66 75 90 170 802

---

## Test-16: Subset Sum Problem
Input: Array: {3, 34, 4, 12, 5, 2}, Sum=9
Expected Output:
Subset with given sum exists: Yes

---

## Test-17: KMP String Matching Algorithm
Input: Text: "abcxabcdabcdabcy", Pattern: "abcdabcy"
Expected Output:
Pattern found at index: 8

---

## Test-18: Longest Increasing Subsequence
Input: Array: {10, 22, 9, 33, 21, 50, 41, 60}
Expected Output:
Length of LIS: 5

---

## Test-19: Find Bridges in a Graph
Input: Graph with 5 vertices and edges [(0, 1), (1, 2), (2, 3), (3, 4)]
Expected Output:
Bridges: [(2, 3), (3, 4)]

---

## Test-20: Binary Heap Implementation
Input: Insert 20, 15, 30, 10
Expected Output:
Heap: 30 15 20 10

---

## Test-21: Count Leaf Nodes in a Binary Tree
Input: Binary Tree: Root=10, Left=20, Right=30, Left->Left=40
Expected Output:
Leaf nodes: 2

---

## Test-22: Traveling Salesperson Problem (TSP)
Input: Cost Matrix for 4 cities
0 10 15 20
10 0 35 25
15 35 0 30
20 25 30 0
Expected Output:
Minimum cost: 80

---

## Test-23: Iterative Depth First Search (DFS)
Input: Graph with 4 vertices and edges [(0, 1), (1, 2), (2, 3)]
Expected Output:
DFS Traversal: 0 1 2 3

---

## Test-24: Coin Change Problem
Input: Coins = {1, 2, 5}, Amount=11
Expected Output:
Number of ways to make change: 4

---

## Test-25: AVL Tree Implementation
Input: Insert 10, 20, 30, 40, 50
Expected Output:
In-order Traversal: 10 20 30 40 50

---

## Test-26: Topological Sorting
Input: Graph with 6 vertices and edges [(5, 2), (5, 0), (4, 0), (4, 1), (2, 3), (3, 1)]
Expected Output:
Topological Order: 5 4 2 3 1 0

---

## Test-27: Longest Common Subsequence (LCS)
Input: Strings: "AGGTAB", "GXTXAYB"
Expected Output:
Length of LCS: 4

---

## Test-28: Rabin-Karp String Matching Algorithm
Input: Text: "abcxabcdabcdabcy", Pattern: "abcdabcy"
Expected Output:
Pattern found at index: 8

---

## Test-29: Evaluate Postfix Expression
Input: Postfix Expression: "231*+9-"
Expected Output:
Result: -4

---

## Test-30: Rotate a Matrix 90 Degrees Clockwise
Input:
Matrix:
1 2 3
4 5 6
7 8 9
Expected Output:
Rotated Matrix:
7 4 1
8 5 2
9 6 3

---

## Test-31: Detect Cycle in a Linked List
Input: Linked List with cycle at node 3
Expected Output:
Cycle detected: Yes

---

## Test-32: Count Number of Islands
Input: 4x4 Grid:
1 1 0 0
1 0 0 1
0 0 1 1
0 0 0 1
Expected Output:
Number of islands: 3

---

## Test-33: Find Maximum Depth of a Binary Tree
Input: Binary Tree: Root=1, Left=2, Right=3, Right->Right=4
Expected Output:
Maximum Depth: 3

---

## Test-34: Find Kth Smallest Element in an Array
Input: Array: 7 10 4 3 20 15, K=3
Expected Output:
Kth Smallest Element: 7

---

## Test-35: Trie with Deletion Operation
Input: Insert "hello", "world"; Delete "hello"
Expected Output:
Search for 'hello': Not Found
Search for 'world': Found

---

## Test-36: Floyd Cycle Detection Algorithm
Input: Sequence: 1 2 3 4 2
Expected Output:
Cycle detected: Yes

---

## Test-37: Serialize and Deserialize a Binary Tree
Input: Binary Tree: Root=1, Left=2, Right=3, Right->Left=4, Right->Right=5
Expected Output:
Serialized: 1,2,#,#,3,4,#,#,5,#,#
Deserialized: Same Binary Tree Structure

---

## Test-38: Job Scheduling Problem
Input: Jobs (Profit, Deadline): (20, 2), (15, 2), (10, 1), (5, 3), (1, 3)
Expected Output:
Maximum Profit: 40

---

## Test-39: Z-Algorithm for Pattern Matching
Input: Text: "abcxabcdabxabcdabcdabcy", Pattern: "abcdabcy"
Expected Output:
Pattern found at index: 15

---

## Test-40: Word Ladder Problem
Input: Start: "hit", End: "cog", Dictionary: ["hot", "dot", "dog", "lot", "log", "cog"]
Expected Output:
Shortest Transformation Length: 5

---

## Test-41: Merge K Sorted Linked Lists
Input: 3 Linked Lists: [1->4->5], [1->3->4], [2->6]
Expected Output:
Merged List: 1->1->2->3->4->4->5->6->NULL

---

## Test-42: Find Articulation Points in a Graph
Input: Graph with 5 vertices and edges (0-1, 0-2, 1-2, 1-3, 3-4)
Expected Output:
Articulation Points: 1, 3

---

## Test-43: Rod Cutting Problem
Input: Prices for rod lengths: [1, 5, 8, 9, 10, 17, 17, 20]; Rod Length=8
Expected Output:
Maximum Obtainable Value: 22

---

## Test-44: Maximum Path Sum in a Binary Tree
Input: Binary Tree: Root=10, Left=2, Right=10, Left->Left=20, Left->Right=1, Right->Right=-25, Right->Right->Left=3, Right->Right->Right=4
Expected Output:
Maximum Path Sum: 42

---

## Test-45: Maximum Profit in Stock Trading
Input: Stock Prices: [7, 1, 5, 3, 6, 4]
Expected Output:
Maximum Profit: 5

---

## Test-46: Flatten a Binary Tree into a Linked List
Input: Binary Tree: Root=1, Left=2, Right=5, Left->Left=3, Left->Right=4, Right->Right=6
Expected Output:
Flattened Tree: 1->2->3->4->5->6->NULL

---

## Test-47: Check If a Graph is Bipartite
Input: Graph with 4 vertices and edges (0-1, 1-2, 2-3, 3-0)
Expected Output:
Bipartite: No

---

## Test-48: Count Distinct Substrings
Input: String: "abc"
Expected Output:
Number of Distinct Substrings: 6

---

## Test-49: Maximum Flow Using Ford-Fulkerson Algorithm
Input: Graph with 4 vertices and capacities: (0->1:10, 0->2:5, 1->2:15, 1->3:10, 2->3:10)
Expected Output:
Maximum Flow: 15

---

## Test-50: Strassen's Matrix Multiplication
Input:
Matrix A:
1 2
3 4
Matrix B:
5 6
7 8
Expected Output:
Resultant Matrix:
19 22
43 50

---